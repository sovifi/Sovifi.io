"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_utils_hashing_hashMessage_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashMessage: () => (/* binding */ hashMessage)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/concat.js\");\n/* harmony import */ var _encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/to-bytes.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js\");\n/* harmony import */ var _keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n\n\n\nconst presignMessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n/**\n * Ethereum Signed Message hashing\n * @param message - The message to hash, either as a string, a Uint8Array, or an object with a `raw` property containing a Uint8Array.\n * @param to_ - The desired output format of the hash (optional). Defaults to 'hex'.\n * @example\n * ```ts\n * import { hashMessage } from \"thirdweb/utils\";\n * const hash = hashMessage(\"hello world\");\n * ```\n * @returns The Ethereum Signed Message hash of the message in the specified format.\n * @utils\n */\nfunction hashMessage(message, to_) {\n    const messageBytes = (() => {\n        if (typeof message === \"string\") {\n            return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(message);\n        }\n        if (message.raw instanceof Uint8Array) {\n            return message.raw;\n        }\n        return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(message.raw);\n    })();\n    const prefixBytes = (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(`${presignMessagePrefix}${messageBytes.length}`);\n    return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,viem__WEBPACK_IMPORTED_MODULE_2__.concat)([prefixBytes, messageBytes]), to_);\n}\n//# sourceMappingURL=hashMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2hNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEI7QUFDbUM7QUFDdEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQixvRUFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQU87QUFDdEIsS0FBSztBQUNMLHdCQUF3QixvRUFBYSxJQUFJLHFCQUFxQixFQUFFLG9CQUFvQjtBQUNwRixXQUFXLHdEQUFTLENBQUMsNENBQU07QUFDM0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2hNZXNzYWdlLmpzPzg5MTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uY2F0IH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IHN0cmluZ1RvQnl0ZXMsIHRvQnl0ZXMgfSBmcm9tIFwiLi4vZW5jb2RpbmcvdG8tYnl0ZXMuanNcIjtcbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gXCIuL2tlY2NhazI1Ni5qc1wiO1xuY29uc3QgcHJlc2lnbk1lc3NhZ2VQcmVmaXggPSBcIlxceDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XFxuXCI7XG4vKipcbiAqIEV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlIGhhc2hpbmdcbiAqIEBwYXJhbSBtZXNzYWdlIC0gVGhlIG1lc3NhZ2UgdG8gaGFzaCwgZWl0aGVyIGFzIGEgc3RyaW5nLCBhIFVpbnQ4QXJyYXksIG9yIGFuIG9iamVjdCB3aXRoIGEgYHJhd2AgcHJvcGVydHkgY29udGFpbmluZyBhIFVpbnQ4QXJyYXkuXG4gKiBAcGFyYW0gdG9fIC0gVGhlIGRlc2lyZWQgb3V0cHV0IGZvcm1hdCBvZiB0aGUgaGFzaCAob3B0aW9uYWwpLiBEZWZhdWx0cyB0byAnaGV4Jy5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgaGFzaE1lc3NhZ2UgfSBmcm9tIFwidGhpcmR3ZWIvdXRpbHNcIjtcbiAqIGNvbnN0IGhhc2ggPSBoYXNoTWVzc2FnZShcImhlbGxvIHdvcmxkXCIpO1xuICogYGBgXG4gKiBAcmV0dXJucyBUaGUgRXRoZXJldW0gU2lnbmVkIE1lc3NhZ2UgaGFzaCBvZiB0aGUgbWVzc2FnZSBpbiB0aGUgc3BlY2lmaWVkIGZvcm1hdC5cbiAqIEB1dGlsc1xuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzaE1lc3NhZ2UobWVzc2FnZSwgdG9fKSB7XG4gICAgY29uc3QgbWVzc2FnZUJ5dGVzID0gKCgpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nVG9CeXRlcyhtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWVzc2FnZS5yYXcgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZS5yYXc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRvQnl0ZXMobWVzc2FnZS5yYXcpO1xuICAgIH0pKCk7XG4gICAgY29uc3QgcHJlZml4Qnl0ZXMgPSBzdHJpbmdUb0J5dGVzKGAke3ByZXNpZ25NZXNzYWdlUHJlZml4fSR7bWVzc2FnZUJ5dGVzLmxlbmd0aH1gKTtcbiAgICByZXR1cm4ga2VjY2FrMjU2KGNvbmNhdChbcHJlZml4Qnl0ZXMsIG1lc3NhZ2VCeXRlc10pLCB0b18pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaE1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js\n"));

/***/ })

}]);