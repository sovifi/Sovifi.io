"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_rpc_actions_eth_getTransactionCount_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_getTransactionCount: () => (/* binding */ eth_getTransactionCount)\n/* harmony export */ });\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n/**\n * Retrieves the transaction count (nonce) for a given Ethereum address.\n * @param request - The EIP1193 request function.\n * @param params - The parameters for retrieving the transaction count.\n * @returns A promise that resolves to the transaction count as a number.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_getTransactionCount } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const transactionCount = await eth_getTransactionCount(rpcRequest, {\n *  address: \"0x...\",\n * });\n * ```\n */\nasync function eth_getTransactionCount(request, params) {\n    const count = await request({\n        method: \"eth_getTransactionCount\",\n        params: [\n            params.address,\n            // makes sense to default to `pending` here, since we're asking for a transaction count (nonce)\n            params.blockNumber\n                ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(params.blockNumber)\n                : params.blockTag || \"pending\",\n        ],\n    });\n    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(count);\n}\n//# sourceMappingURL=eth_getTransactionCount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfZ2V0VHJhbnNhY3Rpb25Db3VudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3Q0FBd0M7QUFDcEQscUNBQXFDLGVBQWU7QUFDcEQ7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQVc7QUFDN0I7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLG1FQUFXO0FBQ3RCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcnBjL2FjdGlvbnMvZXRoX2dldFRyYW5zYWN0aW9uQ291bnQuanM/MGMyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb051bWJlciwgbnVtYmVyVG9IZXggfSBmcm9tIFwiLi4vLi4vdXRpbHMvZW5jb2RpbmcvaGV4LmpzXCI7XG4vKipcbiAqIFJldHJpZXZlcyB0aGUgdHJhbnNhY3Rpb24gY291bnQgKG5vbmNlKSBmb3IgYSBnaXZlbiBFdGhlcmV1bSBhZGRyZXNzLlxuICogQHBhcmFtIHJlcXVlc3QgLSBUaGUgRUlQMTE5MyByZXF1ZXN0IGZ1bmN0aW9uLlxuICogQHBhcmFtIHBhcmFtcyAtIFRoZSBwYXJhbWV0ZXJzIGZvciByZXRyaWV2aW5nIHRoZSB0cmFuc2FjdGlvbiBjb3VudC5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSB0cmFuc2FjdGlvbiBjb3VudCBhcyBhIG51bWJlci5cbiAqIEBycGNcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZ2V0UnBjQ2xpZW50LCBldGhfZ2V0VHJhbnNhY3Rpb25Db3VudCB9IGZyb20gXCJ0aGlyZHdlYi9ycGNcIjtcbiAqIGNvbnN0IHJwY1JlcXVlc3QgPSBnZXRScGNDbGllbnQoeyBjbGllbnQsIGNoYWluIH0pO1xuICogY29uc3QgdHJhbnNhY3Rpb25Db3VudCA9IGF3YWl0IGV0aF9nZXRUcmFuc2FjdGlvbkNvdW50KHJwY1JlcXVlc3QsIHtcbiAqICBhZGRyZXNzOiBcIjB4Li4uXCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXRoX2dldFRyYW5zYWN0aW9uQ291bnQocmVxdWVzdCwgcGFyYW1zKSB7XG4gICAgY29uc3QgY291bnQgPSBhd2FpdCByZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiBcImV0aF9nZXRUcmFuc2FjdGlvbkNvdW50XCIsXG4gICAgICAgIHBhcmFtczogW1xuICAgICAgICAgICAgcGFyYW1zLmFkZHJlc3MsXG4gICAgICAgICAgICAvLyBtYWtlcyBzZW5zZSB0byBkZWZhdWx0IHRvIGBwZW5kaW5nYCBoZXJlLCBzaW5jZSB3ZSdyZSBhc2tpbmcgZm9yIGEgdHJhbnNhY3Rpb24gY291bnQgKG5vbmNlKVxuICAgICAgICAgICAgcGFyYW1zLmJsb2NrTnVtYmVyXG4gICAgICAgICAgICAgICAgPyBudW1iZXJUb0hleChwYXJhbXMuYmxvY2tOdW1iZXIpXG4gICAgICAgICAgICAgICAgOiBwYXJhbXMuYmxvY2tUYWcgfHwgXCJwZW5kaW5nXCIsXG4gICAgICAgIF0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGhleFRvTnVtYmVyKGNvdW50KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV0aF9nZXRUcmFuc2FjdGlvbkNvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js\n"));

/***/ })

}]);